Left shift ->
Right shift ->
subsequence -> Power set or Recursion

For Recursion  
    1. Express everything in terms of index
    2. Explore all possibilities. eg (in subsequnce pick or not pick)
    3. If count then sum of all steps
    3. If to find minimium or maximum get minimum or maximum  length. eg (in subsequence max length betweeen take and nottake)
    3. Take the best among them
    4. Base case

Memoization -> Tabulation
    1. Copy the base case.
    2. Write down the changing parameter in opposite fashion.
    3. Copy the recurrance.

throw -> Just throwing an exception
throws -> Use to declare Exceptions (Used to say that, it may throw an exception)


Shallow Copy -> copy the reference, new object witll point to the same address location as of the original one. Change in the values of new object will result in the change of the original.

Deep Copy -> Just copy the value. No chnage will be made if the new object is chnaged.

Binary search -> if the array is sorted or we want to allocate something in continuoue fashion. Can be implemented in the search space.



subarray -> Continuous part and maintian order

subsequence -> Maintina order but may or may not be Continuous

subset -> not ordering not Continuous

substring -> same as subarray but in strings